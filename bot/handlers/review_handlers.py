"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ–±–∑–æ—Ä–æ–≤ –∏ –æ—Ü–µ–Ω–æ–∫
"""

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from ..services.memory_service import MemoryService

logger = logging.getLogger(__name__)


async def review_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /review - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ–±–∑–æ—Ä"""
    review_message = """
üîç *–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ–±–∑–æ—Ä*

–î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–≤–µ–¥–µ–º –±—ã—Å—Ç—Ä—ã–π –æ–±–∑–æ—Ä –¥–Ω—è:

1. *–ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è?*
2. *–ß—Ç–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å?*
3. *–ö–∞–∫ –≤—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç–µ?*
4. *–ß—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞?*

–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã, –∏ —è –ø–æ–º–æ–≥—É –∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å.

*–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—ã—Å—Ç—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ:*
    """
    
    keyboard = [
        [
            InlineKeyboardButton("üìù –ù–∞—á–∞—Ç—å –æ–±–∑–æ—Ä", callback_data="start_review"),
            InlineKeyboardButton("üìä –ë—ã—Å—Ç—Ä—ã–π —á–µ–∫", callback_data="quick_check")
        ],
        [
            InlineKeyboardButton("üòä –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", callback_data="mood_check"),
            InlineKeyboardButton("‚úÖ –ü—Ä–∏–≤—ã—á–∫–∏", callback_data="habits_check")
        ]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        review_message, 
        parse_mode='Markdown',
        reply_markup=reply_markup
    )
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ–±–∑–æ—Ä")


async def assess_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /assess - –æ—Ü–µ–Ω–∫–∞ –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π"""
    areas = ['–ó–¥–æ—Ä–æ–≤—å–µ', '–ö–∞—Ä—å–µ—Ä–∞', '–û—Ç–Ω–æ—à–µ–Ω–∏—è', '–§–∏–Ω–∞–Ω—Å—ã', '–õ–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç']
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –æ–±–ª–∞—Å—Ç–∏
    keyboard = []
    for area in areas:
        row = []
        for score in range(1, 11):  # –®–∫–∞–ª–∞ 1-10
            row.append(InlineKeyboardButton(
                str(score), 
                callback_data=f"area_score:{area}:{score}"
            ))
            # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Ä—è–¥—ã –ø–æ 5 –∫–Ω–æ–ø–æ–∫
            if len(row) == 5:
                keyboard.append(row)
                row = []
        if row:  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏
            keyboard.append(row)
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    message = """
üìà *–û—Ü–µ–Ω–∫–∞ –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π*

–û—Ü–µ–Ω–∏—Ç–µ –∫–∞–∂–¥—É—é –æ–±–ª–∞—Å—Ç—å –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 10:

*–ó–¥–æ—Ä–æ–≤—å–µ* - —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –∏ –ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
*–ö–∞—Ä—å–µ—Ä–∞* - —Ä–∞–±–æ—Ç–∞, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç
*–û—Ç–Ω–æ—à–µ–Ω–∏—è* - —Å–µ–º—å—è, –¥—Ä—É–∑—å—è, —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏
*–§–∏–Ω–∞–Ω—Å—ã* - –¥–æ—Ö–æ–¥—ã, —Ä–∞—Å—Ö–æ–¥—ã, —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ü–µ–ª–∏
*–õ–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç* - –æ–±—É—á–µ–Ω–∏–µ, —Ä–∞–∑–≤–∏—Ç–∏–µ, —Ö–æ–±–±–∏

–í—ã–±–µ—Ä–∏—Ç–µ –æ–±–ª–∞—Å—Ç—å –∏ –æ—Ü–µ–Ω–∫—É:
    """
    
    await update.message.reply_text(
        message,
        parse_mode='Markdown',
        reply_markup=reply_markup
    )
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –æ—Ü–µ–Ω–∫—É –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π")


async def schedule_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /schedule - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"""
    try:
        # –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º
        # –ü–æ–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        
        schedule_message = """
üìÖ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*

09:00 - –£—Ç—Ä–µ–Ω–Ω—è—è —Ä—É—Ç–∏–Ω–∞
10:00 - –†–∞–±–æ—á–∏–µ –∑–∞–¥–∞—á–∏
12:00 - –û–±–µ–¥
13:00 - –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
18:00 - –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞
20:00 - –£–∂–∏–Ω
22:00 - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ —Å–Ω—É

*–°–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è:* 2 —á–∞—Å–∞
*–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏:* 3

*–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:*
        """
        
        keyboard = [
            [
                InlineKeyboardButton("üìã –ó–∞–¥–∞—á–∏", callback_data="show_tasks"),
                InlineKeyboardButton("‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", callback_data="show_reminders")
            ],
            [
                InlineKeyboardButton("üìù –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ", callback_data="add_event"),
                InlineKeyboardButton("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å", callback_data="sync_calendar")
            ]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            schedule_message,
            parse_mode='Markdown',
            reply_markup=reply_markup
        )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: {e}")
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è") 